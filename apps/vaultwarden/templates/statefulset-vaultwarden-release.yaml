# Source: vaultwarden/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.19.0
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.1"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: vaultwarden
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: vaultwarden
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/instance: vaultwarden-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: vaultwarden
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/instance: vaultwarden-release
      annotations:
        checksum/config: 477926414c665edda40ec4ba5e189336f35248e2
        checksum/secret: 2e6a40e68134bb470cb2952753bd4de99cd0d894
    spec:
      
      containers:
        - image: docker.io/vaultwarden/server:1.30.1-alpine
          imagePullPolicy: IfNotPresent
          name: vaultwarden
          envFrom:
            - configMapRef:
                name: vaultwarden-release
          env:
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-release
                  key: ADMIN_TOKEN
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 3012
              name: websocket
              protocol: TCP
          volumeMounts:
            - name: vaultwarden-data
              mountPath: /data
          resources:
                  {}
          livenessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      serviceAccountName: vaultwarden-svc
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  volumeClaimTemplates:
    - metadata:
        name: vaultwarden-data
        labels:
            helm.sh/chart: vaultwarden-0.19.0
            app.kubernetes.io/name: vaultwarden
            app.kubernetes.io/instance: vaultwarden-release
            app.kubernetes.io/version: "1.30.1"
            app.kubernetes.io/managed-by: Helm
        annotations:
          meta.helm.sh/release-name: "vaultwarden-release"
          meta.helm.sh/release-namespace: "vaultwarden"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 2Gi
        storageClassName: "nfs-csi"
